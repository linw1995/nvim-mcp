name: "CD"
on:
  push:
    tags:
      - "v*"

jobs:
  build-binary:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: nixbuild/nix-quick-install-action@v33
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 15G

      - name: Setup nix develop env
        run: |
          echo 'use flake' >.envrc
      - uses: HatsuneMiku3939/direnv-action@v1
      # and avoid develop env being gc

      - name: Build binary
        run: nix build --profile default
      # use --profile default to avoid dependencies being gc

  publish:
    needs:
      - build-binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - uses: nixbuild/nix-quick-install-action@v33
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 15G

      - name: Setup nix develop env
        run: |
          echo 'use flake' >.envrc
      - uses: HatsuneMiku3939/direnv-action@v1
      # and avoid develop env being gc

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Bake commit SHA into crate
        run: echo "${GITHUB_SHA}" > .packaged-commit

      - name: Publish crates.io
        run: |
          cargo publish --token ${{ secrets.CRATES_IO_TOKEN }} --allow-dirty
